/**
 * generated by Xtext 2.25.0
 */
package game.of.life.lifeDsl.impl;

import game.of.life.lifeDsl.InitialGrid;
import game.of.life.lifeDsl.LifeDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Initial Grid</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link game.of.life.lifeDsl.impl.InitialGridImpl#getRows <em>Rows</em>}</li>
 *   <li>{@link game.of.life.lifeDsl.impl.InitialGridImpl#getColumns <em>Columns</em>}</li>
 *   <li>{@link game.of.life.lifeDsl.impl.InitialGridImpl#getCellsX <em>Cells X</em>}</li>
 *   <li>{@link game.of.life.lifeDsl.impl.InitialGridImpl#getCellsY <em>Cells Y</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InitialGridImpl extends MinimalEObjectImpl.Container implements InitialGrid
{
  /**
   * The default value of the '{@link #getRows() <em>Rows</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRows()
   * @generated
   * @ordered
   */
  protected static final int ROWS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getRows() <em>Rows</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRows()
   * @generated
   * @ordered
   */
  protected int rows = ROWS_EDEFAULT;

  /**
   * The default value of the '{@link #getColumns() <em>Columns</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumns()
   * @generated
   * @ordered
   */
  protected static final int COLUMNS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getColumns() <em>Columns</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColumns()
   * @generated
   * @ordered
   */
  protected int columns = COLUMNS_EDEFAULT;

  /**
   * The default value of the '{@link #getCellsX() <em>Cells X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCellsX()
   * @generated
   * @ordered
   */
  protected static final String CELLS_X_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCellsX() <em>Cells X</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCellsX()
   * @generated
   * @ordered
   */
  protected String cellsX = CELLS_X_EDEFAULT;

  /**
   * The default value of the '{@link #getCellsY() <em>Cells Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCellsY()
   * @generated
   * @ordered
   */
  protected static final String CELLS_Y_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCellsY() <em>Cells Y</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCellsY()
   * @generated
   * @ordered
   */
  protected String cellsY = CELLS_Y_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InitialGridImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LifeDslPackage.Literals.INITIAL_GRID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getRows()
  {
    return rows;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRows(int newRows)
  {
    int oldRows = rows;
    rows = newRows;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LifeDslPackage.INITIAL_GRID__ROWS, oldRows, rows));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getColumns()
  {
    return columns;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setColumns(int newColumns)
  {
    int oldColumns = columns;
    columns = newColumns;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LifeDslPackage.INITIAL_GRID__COLUMNS, oldColumns, columns));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCellsX()
  {
    return cellsX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCellsX(String newCellsX)
  {
    String oldCellsX = cellsX;
    cellsX = newCellsX;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LifeDslPackage.INITIAL_GRID__CELLS_X, oldCellsX, cellsX));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCellsY()
  {
    return cellsY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCellsY(String newCellsY)
  {
    String oldCellsY = cellsY;
    cellsY = newCellsY;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LifeDslPackage.INITIAL_GRID__CELLS_Y, oldCellsY, cellsY));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LifeDslPackage.INITIAL_GRID__ROWS:
        return getRows();
      case LifeDslPackage.INITIAL_GRID__COLUMNS:
        return getColumns();
      case LifeDslPackage.INITIAL_GRID__CELLS_X:
        return getCellsX();
      case LifeDslPackage.INITIAL_GRID__CELLS_Y:
        return getCellsY();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LifeDslPackage.INITIAL_GRID__ROWS:
        setRows((Integer)newValue);
        return;
      case LifeDslPackage.INITIAL_GRID__COLUMNS:
        setColumns((Integer)newValue);
        return;
      case LifeDslPackage.INITIAL_GRID__CELLS_X:
        setCellsX((String)newValue);
        return;
      case LifeDslPackage.INITIAL_GRID__CELLS_Y:
        setCellsY((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LifeDslPackage.INITIAL_GRID__ROWS:
        setRows(ROWS_EDEFAULT);
        return;
      case LifeDslPackage.INITIAL_GRID__COLUMNS:
        setColumns(COLUMNS_EDEFAULT);
        return;
      case LifeDslPackage.INITIAL_GRID__CELLS_X:
        setCellsX(CELLS_X_EDEFAULT);
        return;
      case LifeDslPackage.INITIAL_GRID__CELLS_Y:
        setCellsY(CELLS_Y_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LifeDslPackage.INITIAL_GRID__ROWS:
        return rows != ROWS_EDEFAULT;
      case LifeDslPackage.INITIAL_GRID__COLUMNS:
        return columns != COLUMNS_EDEFAULT;
      case LifeDslPackage.INITIAL_GRID__CELLS_X:
        return CELLS_X_EDEFAULT == null ? cellsX != null : !CELLS_X_EDEFAULT.equals(cellsX);
      case LifeDslPackage.INITIAL_GRID__CELLS_Y:
        return CELLS_Y_EDEFAULT == null ? cellsY != null : !CELLS_Y_EDEFAULT.equals(cellsY);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (rows: ");
    result.append(rows);
    result.append(", columns: ");
    result.append(columns);
    result.append(", cellsX: ");
    result.append(cellsX);
    result.append(", cellsY: ");
    result.append(cellsY);
    result.append(')');
    return result.toString();
  }

} //InitialGridImpl
